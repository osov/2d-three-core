@startuml
!theme reddress-darkgreen
skinparam groupInheritance 2

interface SimpleEventEmitter{}

package " Менеджеры" #DDDDDD {

interface BaseManager extends SimpleEventEmitter{
}

class EventManager extends BaseManager{
   onResize() 
   onMove(vec:Vector2) // event
   onDown(vec:Vector2) // event
   onUp(vec:Vector2) // event
}

class RenderManager extends EventManager {
  rm:ResourceManager
  em:EntitysManager
}

class GameManager extends RenderManager{
  
   ch:CameraHelper
   wh:WrapHelper
   sh:SelectorHelper
}

class ResourceManager extends BaseManager{
   textures:{string:Texture}
   async loadTextures(path:string, names:string[])
   getTexture(name:string):Texture
}

class EntitysManager extends BaseManager{
   entitys:{number: Entity}
   dynamicEntitys:{number: Entity}
}
}


package "Помощники" #BBDDDD {

interface BaseHelper  extends SimpleEventEmitter{
/*доп методы для менеджеров*/
}
class CameraHelper extends BaseHelper{
/*помощь по камере*/
doCam(pos:Vector2)
}


class WrapHelper extends BaseHelper{
/*бесшовный мир*/
}


class SelectorHelper extends BaseHelper{
/*выбор объекта*/
onEnter(mesh:Object3D) // event
onLeave(mesh:Object3D) // event
}

}

package "Сущности" #DDDD99 {
class Entity  extends SimpleEventEmitter{
  id:number
  /*методы позиций, размеров и т.п.*/
}

class BaseMesh extends Entity{
   mesh:Object3D
}

class PlaneSprite extends BaseMesh {

}

class SimpleText extends BaseMesh {

}


class ParticleList extends Entity{

}

}

RenderManager::rm --> ResourceManager
RenderManager::em --> EntitysManager
GameManager::ch --> CameraHelper
GameManager::wh --> WrapHelper 
GameManager::sh --> SelectorHelper
EntitysManager::entitys --> Entity
@enduml